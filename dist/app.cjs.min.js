"use strict";const shuffle=(t=[])=>t.sort(()=>Math.random()-.5),intersection=(t=[],e=[])=>t.filter(t=>e.includes(t)),removeArray=(t=[],e=[])=>t.filter(t=>!e.includes(t)),chunkArray=(t=[],i=1)=>t.reduce((t,e,n)=>{n=Math.floor(n/i);return t[n]=[].concat(t[n]||[],e),t},[]),randomInt=(t,e)=>Math.floor(Math.random()*(e-t+1))+t,toBin=t=>parseInt(t).toString(2),fromBin=t=>parseInt(t,2),fromBinToBase32=t=>parseInt(t,2).toString(32),toBase32=t=>parseInt(t).toString(32),fromBase32=t=>parseInt(t,32),fromBase32ToBin=t=>parseInt(t,32).toString(2),chars=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"].join(""),vowels=["a","e","i","o","u"].join(""),consonants=removeArray(chars.split(""),vowels.split("")).join(""),alphanum=["0","1","2","3","4","5","6","7","8","9",...chars.split("")].join(""),shuffleStr=t=>t.map(t=>({value:t,sort:Math.random()})).sort((t,e)=>t.sort-e.sort).map(({value:t})=>t),randomChar=(t=1)=>{t=new Array(t).fill(0).map(()=>chars[randomInt(0,chars.length)]);return shuffleStr(t).join("")},randomAlpha=(t=1,e=alphanum.length)=>{t=new Array(t).fill(0).map(()=>alphanum[randomInt(0,e)]);return shuffleStr(t).join("")},chunk=(t,e)=>t.match(new RegExp(".{1,"+e+"}","g"));class MatingStrategy{constructor(t){this.generation=t}run(){console.log("implement me!")}}class Base{constructor({from:t,to:e,weight:n}){this.from=t,this.to=e,this.weight=n}static random({from:t,to:e,weight:n}={}){var i=this.fromBase32(randomAlpha(6,31));return t&&(i.from=t),e&&(i.to=e),n&&(i.weight=n),i}static fromBase32(t){var t=t.padStart(6,"0"),[t,e,n]=chunk(t,2).map(fromBase32ToBin).map(t=>t.padStart(10,"0").split(""));let[i,...r]=t,[o,...a]=e;var[t,...e]=n,n=(r=fromBinToBase32(r.join("")).padStart(2,"0"),a=fromBinToBase32(a.join("")).padStart(2,"0"),fromBin(e.join(""))*("0"===t?1:-1));return new this({from:`${"0"===i?"s":"n"}#`+r,to:`${"0"===o?"n":"a"}#`+a,weight:n/10})}static fromBin(t){t=chunk(t,10).map(t=>fromBinToBase32(t).padStart(2,"0")).join("");return this.fromBase32(t)}toBase32(){var[t,e]=this.from.split("#"),[n,i]=this.to.split("#"),t=["s"===t?"0":"1",fromBase32ToBin(e).padStart(9,"0")].join(""),t=fromBinToBase32(t).padStart(2,"0"),e=["n"===n?"0":"1",fromBase32ToBin(i).padStart(9,"0")].join(""),e=fromBinToBase32(e).padStart(2,"0"),n=[0<=this.weight?"0":"1",toBin(Math.abs(10*this.weight)).padStart(9,"0")].join("");return""+t+e+fromBinToBase32(n).padStart(2,"0")}toBin(){return chunk(this.toBase32(),2).map(t=>fromBase32ToBin(t)).map(t=>t.padStart(10,"0")).join("")}toString(){return this.toBase32()}}class Genome{constructor({bases:t=[],base32:e=[],baseBin:n=[]}={}){this.bases=[].concat(n.map(t=>Base.fromBin(t))).concat(e.map(t=>Base.fromBase32(t))).concat(t),this.nodes=this.getNodes(),this.length=this.bases.length}static copy(t){return new this({bases:t.bases.map(t=>new Base({...t}))})}static random(t=1){return new this({bases:new Array(t).fill(0).map(()=>Base.random())})}static mutateMicro(t,{count:e=1}={}){for(var n=[...t.toArray()],i=n.length;0<e--;){var r=randomInt(0,i-1),o=n[r].split("");o[randomInt(0,o.length-1)]=randomAlpha(1,31),n[r]=o.join("")}return new Genome({base32:n})}static mutateBase(t,{count:e=1,brainConfig:n}){let i=shuffle([...t.toArray()]);for(;0<e--;){i.pop();var r=Genome.randomWithinIds({...n,asArray:!0});i=i.concat(r)}return new Genome({base32:i})}static randomWithinIds({ids:t=[],size:e=1,neuronsCount:n=0,asArray:i=!1}){t=[...t].concat(new Array(n).fill(0).map((t,e)=>"n#"+toBase32(e)));const r=shuffle(t.filter(t=>t.startsWith("s#")||t.startsWith("n#"))),o=shuffle(t.filter(t=>t.startsWith("n#")||t.startsWith("a#")));n=new Array(e).fill(0).map(()=>[r[randomInt(0,r.length-1)],o[randomInt(0,o.length-1)]]).map(([t,e])=>{var[t,n]=t.split("#"),[e,i]=e.split("#"),t=["s"===t?"0":"1",fromBase32ToBin(n).padStart(9,"0")].join(""),t=fromBinToBase32(t).padStart(2,"0"),n=["n"===e?"0":"1",fromBase32ToBin(i).padStart(9,"0")].join(""),n=fromBinToBase32(n).padStart(2,"0"),e=randomInt(-40,40),i=[0<=e?"0":"1",toBin(Math.abs(e)).padStart(9,"0")].join("");return""+t+n+fromBinToBase32(i).padStart(2,"0")});return i?n:new this({base32:n})}static sexualReproduction(t,e){var n=Math.floor(t.length/2),t=[t.bases.slice(0,n).map(t=>new Base({...t})),t.bases.slice(n,t.size).map(t=>new Base({...t}))],n=[e.bases.slice(0,n).map(t=>new Base({...t})),e.bases.slice(n,e.size).map(t=>new Base({...t}))];return[new Genome({bases:[].concat(t[0].concat(n[0]))}),new Genome({bases:[].concat(t[1].concat(n[1]))})]}toArray(){return this.bases.map(t=>t.toString())}toString(){return this.toArray().join(" ")}getNodes(){return[...new Set([].concat(this.bases.map(t=>t.from)).concat(this.bases.map(t=>t.to)))].sort()}}var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},graphology_umd_minExports={},graphology_umd_min={get exports(){return graphology_umd_minExports},set exports(t){graphology_umd_minExports=t}};!function(){function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function r(t,e){t.prototype=Object.create(e.prototype),o(t.prototype.constructor=t,e)}function M(t){return(M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function o(t,e){return(o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function z(t,e,n){return(z=function(){if("undefined"!=typeof Reflect&&Reflect.construct&&!Reflect.construct.sham){if("function"==typeof Proxy)return 1;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),1}catch(t){}}}()?Reflect.construct.bind():function(t,e,n){var i=[null],e=(i.push.apply(i,e),new(Function.bind.apply(t,i)));return n&&o(e,n.prototype),e}).apply(null,arguments)}function I(t){var n="function"==typeof Map?new Map:void 0;return(I=function(t){if(null===t||-1===Function.toString.call(t).indexOf("[native code]"))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(t))return n.get(t);n.set(t,e)}function e(){return z(t,arguments,M(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),o(e,t)})(t)}function a(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function c(t,e,n,i){t=t._nodes.get(e),e=null;return t?"mixed"===i?t.out&&t.out[n]||t.undirected&&t.undirected[n]:"directed"===i?t.out&&t.out[n]:t.undirected&&t.undirected[n]:e}function y(t){return"object"===i(t)&&null!==t&&t.constructor===Object}function T(t){for(var e in t)return;return 1}function d(t,e,n){Object.defineProperty(t,e,{enumerable:!1,configurable:!1,writable:!0,value:n})}function s(t,e,n){var i={enumerable:!0,configurable:!0};"function"==typeof n?i.get=n:(i.value=n,i.writable=!1),Object.defineProperty(t,e,i)}function P(t){return y(t)&&(!t.attributes||Array.isArray(t.attributes))}function e(){e.init.call(this)}function u(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function W(t){return void 0===t._maxListeners?e.defaultMaxListeners:t._maxListeners}function R(t,e,n,i){var r,o;return u(n),void 0===(r=t._events)?(r=t._events=Object.create(null),t._eventsCount=0):(void 0!==r.newListener&&(t.emit("newListener",e,n.listener||n),r=t._events),o=r[e]),void 0===o?(o=r[e]=n,++t._eventsCount):("function"==typeof o?o=r[e]=i?[n,o]:[o,n]:i?o.unshift(n):o.push(n),0<(r=W(t))&&o.length>r&&!o.warned&&(o.warned=!0,(i=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit")).name="MaxListenersExceededWarning",i.emitter=t,i.type=e,i.count=o.length,console)&&console.warn&&console.warn(i)),t}function F(t,e,n){t={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},e=function(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}.bind(t);return e.listener=n,t.wrapFn=e}function K(t,e,n){t=t._events;if(void 0===t)return[];t=t[e];{if(void 0===t)return[];if("function"==typeof t)return n?[t.listener||t]:[t];if(n){for(var i=t,r=new Array(i.length),o=0;o<r.length;++o)r[o]=i[o].listener||i[o];return r}return Y(t,t.length)}}function J(t){var e=this._events;if(void 0!==e){e=e[t];if("function"==typeof e)return 1;if(void 0!==e)return e.length}return 0}function Y(t,e){for(var n=new Array(e),i=0;i<e;++i)n[i]=t[i];return n}function V(n,i,r,o){if("function"==typeof n.on)o.once?n.once(i,r):n.on(i,r);else{if("function"!=typeof n.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof n);n.addEventListener(i,function t(e){o.once&&n.removeEventListener(i,t),r(e)})}}function h(t){if("function"!=typeof t)throw new Error("obliterator/iterator: expecting a function!");this.next=t}function q(t,e){this.key=t,this.attributes=e,this.clear()}function $(t,e){this.key=t,this.attributes=e,this.clear()}function H(t,e){this.key=t,this.attributes=e,this.clear()}function m(t,e,n,i,r){this.key=e,this.attributes=r,this.undirected=t,this.source=n,this.target=i}function p(t,e,n,i,r,o,a){var s,c,u,d;if(i=""+i,0===n){if(!(s=t._nodes.get(i)))throw new _("Graph.".concat(e,': could not find the "').concat(i,'" node in the graph.'));u=r,d=o}else if(3===n){if(!(c=t._edges.get(r=""+r)))throw new _("Graph.".concat(e,': could not find the "').concat(r,'" edge in the graph.'));var h=c.source.key,p=c.target.key;if(i===h)s=c.target;else{if(i!==p)throw new _("Graph.".concat(e,': the "').concat(i,'" node is not attached to the "').concat(r,'" edge (').concat(h,", ").concat(p,")."));s=c.source}u=o,d=a}else{if(!(c=t._edges.get(i)))throw new _("Graph.".concat(e,': could not find the "').concat(i,'" edge in the graph.'));s=1===n?c.source:c.target,u=r,d=o}return[s,u,d]}function Q(t,e,n,i){for(var r in e)if(r!==i){var r=e[r],o=n(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes,r.undirected);if(t&&o)return r.key}}function X(t,e,n,i){var r,o,a,s;for(s in e)if(s!==i){r=e[s];do{if(a=r.source,o=r.target,a=n(r.key,r.attributes,a.key,o.key,a.attributes,o.attributes,r.undirected),t&&a)return r.key}while(void 0!==(r=r.next))}}function w(e,n){var i,r=Object.keys(e),o=r.length,a=0;return new x(function(){do{if(i)i=i.next;else{if(o<=a)return{done:!0};var t=r[a++];t===n?i=void 0:i=e[t]}}while(!i);return{done:!1,value:{edge:i.key,attributes:i.attributes,source:i.source.key,target:i.target.key,sourceAttributes:i.source.attributes,targetAttributes:i.target.attributes,undirected:i.undirected}}})}function Z(t,e,n,i){var r,e=e[n];if(e)return n=e.source,r=e.target,i(e.key,e.attributes,n.key,r.key,n.attributes,r.attributes,e.undirected)&&t?e.key:void 0}function tt(t,e,n,i){var r=e[n];if(r){var o;do{if(o=i(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes,r.undirected),t&&o)return r.key}while(void 0!==(r=r.next))}}function et(t,e){var n=t[e];return void 0!==n.next?new x(function(){var t;return n?(t={edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected},n=n.next,{done:!1,value:t}):{done:!0}}):x.of({edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected})}function nt(t,e,n,i){if(0!==e.size)for(var r,o="mixed"!==n&&n!==e.type,a="undirected"===n,s=e._edges.values();!0!==(r=s.next()).done;)if(r=r.value,!o||r.undirected===a){var c=r.key,u=r.attributes,d=r.source,h=r.target,u=i(c,u,d.key,h.key,d.attributes,h.attributes,r.undirected);if(t&&u)return c}}function it(t,e,n,i,r,o){var a,e=e?X:Q;if("undirected"!==n){if("out"!==i&&(a=e(t,r.in,o),t)&&a)return a;if("in"!==i&&(a=e(t,r.out,o,i?void 0:r.key),t)&&a)return a}if("directed"!==n&&(a=e(t,r.undirected,o),t)&&a)return a}function rt(t,e,n,i,r,o,a){var s,n=n?tt:Z;if("undirected"!==e){if(void 0!==r.in&&"out"!==i&&(s=n(t,r.in,o,a),t)&&s)return s;if(void 0!==r.out&&"in"!==i&&(i||r.key!==o)&&(s=n(t,r.out,o,a),t)&&s)return s}if("directed"!==e&&void 0!==r.undirected&&(s=n(t,r.undirected,o,a),t)&&s)return s}function b(){this.A=null,this.B=null}function f(t,e,n,i,r){for(var o in i){var o=i[o],a=o.source,o=o.target,o=a===n?o:a;if(!e||!e.has(o.key)){a=r(o.key,o.attributes);if(t&&a)return o.key}}}function ot(t,e,n,i,r){if("mixed"!==e){if("undirected"===e)return f(t,null,i,i.undirected,r);if("string"==typeof n)return f(t,null,i,i[n],r)}var o,a=new b;if("undirected"!==e){if("out"!==n){if(o=f(t,null,i,i.in,r),t&&o)return o;a.wrap(i.in)}if("in"!==n){if(o=f(t,a,i,i.out,r),t&&o)return o;a.wrap(i.out)}}if("directed"!==e&&(o=f(t,a,i,i.undirected,r),t)&&o)return o}function v(i,r,o){var a=Object.keys(o),s=a.length,c=0;return new x(function(){var t=null;do{if(s<=c)return i&&i.wrap(o),{done:!0};var e=o[a[c++]],n=e.source,e=e.target,t=n===r?e:n}while(null===(t=i&&i.has(t.key)?null:t));return{done:!1,value:{neighbor:t.key,attributes:t.attributes}}})}function n(t,e,n,i,r){for(var o,a,s,c,u,d,h=i._nodes.values(),p=i.type;!0!==(o=h.next()).done;){var f=!1,l=o.value;if("undirected"!==p)for(a in s=l.out){c=s[a];do{if(u=c.target,f=!0,d=r(l.key,u.key,l.attributes,u.attributes,c.key,c.attributes,c.undirected),t&&d)return}while(c=c.next)}if("directed"!==p)for(a in s=l.undirected)if(!(e&&l.key>a)){c=s[a];do{if((u=c.target).key!==a&&(u=c.source),f=!0,d=r(l.key,u.key,l.attributes,u.attributes,c.key,c.attributes,c.undirected),t&&d)return}while(c=c.next)}if(n&&!f&&(d=r(l.key,null,l.attributes,null,null,null,null),t)&&d)return}}function at(t,e,n){var i=new t.NodeDataClass(e,n);return t._nodes.set(e,i),t.emit("nodeAdded",{key:e,attributes:n}),i}function st(t,e,n,i,r,o,a,s){if(!i&&"undirected"===t.type)throw new E("Graph.".concat(e,": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead."));if(i&&"directed"===t.type)throw new E("Graph.".concat(e,": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead."));if(s&&!y(s))throw new G("Graph.".concat(e,': invalid attributes. Expecting an object but got "').concat(s,'"'));if(o=""+o,a=""+a,s=s||{},!t.allowSelfLoops&&o===a)throw new E("Graph.".concat(e,': source & target are the same ("').concat(o,"\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false."));var c=t._nodes.get(o),u=t._nodes.get(a);if(!c)throw new _("Graph.".concat(e,': source node "').concat(o,'" not found.'));if(!u)throw new _("Graph.".concat(e,': target node "').concat(a,'" not found.'));var d={key:null,undirected:i,source:o,target:a,attributes:s};if(n)r=t._edgeKeyGenerator();else if(t._edges.has(r=""+r))throw new E("Graph.".concat(e,': the "').concat(r,'" edge already exists in the graph.'));if(t.multi||(i?void 0===c.undirected[a]:void 0===c.out[a]))return n=new m(i,r,c,u,s),t._edges.set(r,n),s=o===a,i?(c.undirectedDegree++,u.undirectedDegree++,s&&(c.undirectedLoops++,t._undirectedSelfLoopCount++)):(c.outDegree++,u.inDegree++,s&&(c.directedLoops++,t._directedSelfLoopCount++)),t.multi?n.attachMulti():n.attach(),i?t._undirectedSize++:t._directedSize++,d.key=r,t.emit("edgeAdded",d),r;throw new E("Graph.".concat(e,': an edge linking "').concat(o,'" to "').concat(a,"\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option."))}function ct(t,e,n,i,r,o,a,s,c){if(!i&&"undirected"===t.type)throw new E("Graph.".concat(e,": you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead."));if(i&&"directed"===t.type)throw new E("Graph.".concat(e,": you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead."));if(s)if(c){if("function"!=typeof s)throw new G("Graph.".concat(e,': invalid updater function. Expecting a function but got "').concat(s,'"'))}else if(!y(s))throw new G("Graph.".concat(e,': invalid attributes. Expecting an object but got "').concat(s,'"'));var u;if(o=""+o,a=""+a,c&&(u=s,s=void 0),!t.allowSelfLoops&&o===a)throw new E("Graph.".concat(e,': source & target are the same ("').concat(o,"\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false."));var d,h=t._nodes.get(o),p=t._nodes.get(a);if(!n&&(d=t._edges.get(r))){if(!(d.source.key===o&&d.target.key===a||i&&d.source.key===a&&d.target.key===o))throw new E("Graph.".concat(e,': inconsistency detected when attempting to merge the "').concat(r,'" edge with "').concat(o,'" source & "').concat(a,'" target vs. ("').concat(d.source.key,'", "').concat(d.target.key,'").'));l=d}if(l=l||t.multi||!h?l:(i?h.undirected:h.out)[a])return g=[l.key,!1,!1,!1],(c?u:s)&&(c?(f=l.attributes,l.attributes=u(f),t.emit("edgeAttributesUpdated",{type:"replace",key:l.key,attributes:l.attributes})):(k(l.attributes,s),t.emit("edgeAttributesUpdated",{type:"merge",key:l.key,attributes:l.attributes,data:s}))),g;s=s||{};var f={key:null,undirected:i,source:o,target:a,attributes:s=c&&u?u(s):s};if(n)r=t._edgeKeyGenerator();else if(t._edges.has(r=""+r))throw new E("Graph.".concat(e,': the "').concat(r,'" edge already exists in the graph.'));var l=!1,g=!1,c=(h||(h=at(t,o,{}),l=!0,o===a&&(p=h,g=!0)),p||(p=at(t,a,{}),g=!0),d=new m(i,r,h,p,s),t._edges.set(r,d),o===a);return i?(h.undirectedDegree++,p.undirectedDegree++,c&&(h.undirectedLoops++,t._undirectedSelfLoopCount++)):(h.outDegree++,p.inDegree++,c&&(h.directedLoops++,t._directedSelfLoopCount++)),t.multi?d.attachMulti():d.attach(),i?t._undirectedSize++:t._directedSize++,f.key=r,t.emit("edgeAdded",f),[r,!0,l,g]}function g(t,e){t._edges.delete(e.key);var n=e.source,i=e.target,r=e.attributes,o=e.undirected,a=n===i;o?(n.undirectedDegree--,i.undirectedDegree--,a&&(n.undirectedLoops--,t._undirectedSelfLoopCount--)):(n.outDegree--,i.inDegree--,a&&(n.directedLoops--,t._directedSelfLoopCount--)),t.multi?e.detachMulti():e.detach(),o?t._undirectedSize--:t._directedSize--,t.emit("edgeDropped",{key:e.key,attributes:r,source:n.key,target:i.key,undirected:o})}function t(n){n.from=function(t,e){e=k({},t.options,e),e=new n(e);return e.import(t),e}}var k,ut,dt,ht,pt,x,ft,lt,gt,yt,mt,G,_,E,wt,bt,S,vt,kt,xt,Gt,l,A,L,D,O,B,j,N,U,C;graphology_umd_min.exports=(k=function(){for(var t=arguments[0],e=1,n=arguments.length;e<n;e++)if(arguments[e])for(var i in arguments[e])t[i]=arguments[e][i];return t},"function"==typeof Object.assign&&(k=Object.assign),B={exports:{}},U="object"==typeof Reflect?Reflect:null,dt=U&&"function"==typeof U.apply?U.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)},ut=U&&"function"==typeof U.ownKeys?U.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)},ht=Number.isNaN||function(t){return t!=t},B.exports=e,B.exports.once=function(r,o){return new Promise(function(t,e){function n(t){r.removeListener(o,i),e(t)}function i(){"function"==typeof r.removeListener&&r.removeListener("error",n),t([].slice.call(arguments))}V(r,o,i,{once:!0}),"error"!==o&&"function"==typeof r.on&&V(r,"error",n,{once:!0})})},(e.EventEmitter=e).prototype._events=void 0,e.prototype._eventsCount=0,e.prototype._maxListeners=void 0,pt=10,Object.defineProperty(e,"defaultMaxListeners",{enumerable:!0,get:function(){return pt},set:function(t){if("number"!=typeof t||t<0||ht(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");pt=t}}),e.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},e.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||ht(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},e.prototype.getMaxListeners=function(){return W(this)},e.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var i="error"===t,r=this._events;if(void 0!==r)i=i&&void 0===r.error;else if(!i)return!1;if(i){if((o=0<e.length?e[0]:o)instanceof Error)throw o;i=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw i.context=o,i}var o=r[t];if(void 0===o)return!1;if("function"==typeof o)dt(o,this,e);else for(var a=o.length,s=Y(o,a),n=0;n<a;++n)dt(s[n],this,e);return!0},e.prototype.on=e.prototype.addListener=function(t,e){return R(this,t,e,!1)},e.prototype.prependListener=function(t,e){return R(this,t,e,!0)},e.prototype.once=function(t,e){return u(e),this.on(t,F(this,t,e)),this},e.prototype.prependOnceListener=function(t,e){return u(e),this.prependListener(t,F(this,t,e)),this},e.prototype.off=e.prototype.removeListener=function(t,e){var n,i,r,o,a;if(u(e),void 0!==(i=this._events)&&void 0!==(n=i[t]))if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete i[t],i.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(r=-1,o=n.length-1;0<=o;o--)if(n[o]===e||n[o].listener===e){a=n[o].listener,r=o;break}if(r<0)return this;if(0===r)n.shift();else{var s=n;var c=r;for(;c+1<s.length;c++)s[c]=s[c+1];s.pop()}1===n.length&&(i[t]=n[0]),void 0!==i.removeListener&&this.emit("removeListener",t,a||e)}return this},e.prototype.removeAllListeners=function(t){var e,n;if(void 0!==(n=this._events))if(void 0===n.removeListener)0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]);else if(0===arguments.length){for(var i,r=Object.keys(n),o=0;o<r.length;++o)"removeListener"!==(i=r[o])&&this.removeAllListeners(i);this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0}else if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(o=e.length-1;0<=o;o--)this.removeListener(t,e[o]);return this},e.prototype.listeners=function(t){return K(this,t,!0)},e.prototype.rawListeners=function(t){return K(this,t,!1)},e.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):J.call(t,e)},e.prototype.listenerCount=J,e.prototype.eventNames=function(){return 0<this._eventsCount?ut(this._events):[]},"undefined"!=typeof Symbol&&(h.prototype[Symbol.iterator]=function(){return this}),h.of=function(){var t=arguments,e=t.length,n=0;return new h(function(){return e<=n?{done:!0}:{done:!1,value:t[n++]}})},h.empty=function(){return new h(function(){return{done:!0}})},h.fromSequence=function(t){var e=0,n=t.length;return new h(function(){return n<=e?{done:!0}:{done:!1,value:t[e++]}})},h.is=function(t){return t instanceof h||"object"==typeof t&&null!==t&&"function"==typeof t.next},x=h,(U={}).ARRAY_BUFFER_SUPPORT="undefined"!=typeof ArrayBuffer,U.SYMBOL_SUPPORT="undefined"!=typeof Symbol,ft=x,lt=U.ARRAY_BUFFER_SUPPORT,gt=U.SYMBOL_SUPPORT,yt=U=function(t){t="string"==typeof(t=t)||Array.isArray(t)||lt&&ArrayBuffer.isView(t)?ft.fromSequence(t):"object"!=typeof t||null===t?null:gt&&"function"==typeof t[Symbol.iterator]?t[Symbol.iterator]():"function"==typeof t.next?t:null;if(t)return t;throw new Error("obliterator: target is not iterable nor a valid iterator.")},mt=function(t,e){for(var n,i=1<arguments.length?e:1/0,r=i!==1/0?new Array(i):[],o=0,a=yt(t);;){if(o===i)return r;if((n=a.next()).done)return o!==e&&(r.length=o),r;r[o++]=n.value}},j=function(n){function t(t){var e;return(e=n.call(this)||this).name="GraphError",e.message=t,e}return r(t,n),t}(I(Error)),G=function(e){function n(t){return(t=e.call(this,t)||this).name="InvalidArgumentsGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(a(t),n.prototype.constructor),t}return r(n,e),n}(j),_=function(e){function n(t){return(t=e.call(this,t)||this).name="NotFoundGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(a(t),n.prototype.constructor),t}return r(n,e),n}(j),E=function(e){function n(t){return(t=e.call(this,t)||this).name="UsageGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(a(t),n.prototype.constructor),t}return r(n,e),n}(j),q.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.undirectedLoops=0,this.directedLoops=0,this.in={},this.out={},this.undirected={}},$.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.directedLoops=0,this.in={},this.out={}},H.prototype.clear=function(){this.undirectedDegree=0,this.undirectedLoops=0,this.undirected={}},m.prototype.attach=function(){var t="out",e="in",n=(this.undirected&&(t=e="undirected"),this.source.key),i=this.target.key;(this.source[t][i]=this).undirected&&n===i||(this.target[e][n]=this)},m.prototype.attachMulti=function(){var t="out",e="in",n=this.source.key,i=this.target.key,t=(this.undirected&&(t=e="undirected"),this.source[t]),r=t[i];void 0===r?(t[i]=this).undirected&&n===i||(this.target[e][n]=this):((r.previous=this).next=r,(t[i]=this).target[e][n]=this)},m.prototype.detach=function(){var t=this.source.key,e=this.target.key,n="out",i="in";this.undirected&&(n=i="undirected"),delete this.source[n][e],delete this.target[i][t]},m.prototype.detachMulti=function(){var t=this.source.key,e=this.target.key,n="out",i="in";this.undirected&&(n=i="undirected"),void 0===this.previous?void 0===this.next?(delete this.source[n][e],delete this.target[i][t]):(this.next.previous=void 0,this.source[n][e]=this.next,this.target[i][t]=this.next):(this.previous.next=this.next,void 0!==this.next&&(this.next.previous=this.previous))},j=[{name:function(t){return"get".concat(t,"Attribute")},attacher:function(t,i,r){t.prototype[i]=function(t,e,n){t=p(this,i,r,t,e,n),e=t[0],n=t[1];return e.attributes[n]}}},{name:function(t){return"get".concat(t,"Attributes")},attacher:function(t,n,i){t.prototype[n]=function(t,e){return p(this,n,i,t,e)[0].attributes}}},{name:function(t){return"has".concat(t,"Attribute")},attacher:function(t,i,r){t.prototype[i]=function(t,e,n){t=p(this,i,r,t,e,n),e=t[0],n=t[1];return e.attributes.hasOwnProperty(n)}}},{name:function(t){return"set".concat(t,"Attribute")},attacher:function(t,r,o){t.prototype[r]=function(t,e,n,i){t=p(this,r,o,t,e,n,i),e=t[0],n=t[1],i=t[2];return e.attributes[n]=i,this.emit("nodeAttributesUpdated",{key:e.key,type:"set",attributes:e.attributes,name:n}),this}}},{name:function(t){return"update".concat(t,"Attribute")},attacher:function(t,r,o){t.prototype[r]=function(t,e,n,i){t=p(this,r,o,t,e,n,i),e=t[0],n=t[1],i=t[2];if("function"!=typeof i)throw new G("Graph.".concat(r,": updater should be a function."));t=e.attributes,i=i(t[n]);return t[n]=i,this.emit("nodeAttributesUpdated",{key:e.key,type:"set",attributes:e.attributes,name:n}),this}}},{name:function(t){return"remove".concat(t,"Attribute")},attacher:function(t,i,r){t.prototype[i]=function(t,e,n){t=p(this,i,r,t,e,n),e=t[0],n=t[1];return delete e.attributes[n],this.emit("nodeAttributesUpdated",{key:e.key,type:"remove",attributes:e.attributes,name:n}),this}}},{name:function(t){return"replace".concat(t,"Attributes")},attacher:function(t,i,r){t.prototype[i]=function(t,e,n){t=p(this,i,r,t,e,n),e=t[0],n=t[1];if(y(n))return e.attributes=n,this.emit("nodeAttributesUpdated",{key:e.key,type:"replace",attributes:e.attributes}),this;throw new G("Graph.".concat(i,": provided attributes are not a plain object."))}}},{name:function(t){return"merge".concat(t,"Attributes")},attacher:function(t,i,r){t.prototype[i]=function(t,e,n){t=p(this,i,r,t,e,n),e=t[0],n=t[1];if(y(n))return k(e.attributes,n),this.emit("nodeAttributesUpdated",{key:e.key,type:"merge",attributes:e.attributes,data:n}),this;throw new G("Graph.".concat(i,": provided attributes are not a plain object."))}}},{name:function(t){return"update".concat(t,"Attributes")},attacher:function(t,i,r){t.prototype[i]=function(t,e,n){t=p(this,i,r,t,e,n),e=t[0],n=t[1];if("function"!=typeof n)throw new G("Graph.".concat(i,": provided updater is not a function."));return e.attributes=n(e.attributes),this.emit("nodeAttributesUpdated",{key:e.key,type:"update",attributes:e.attributes}),this}}}],N=[{name:function(t){return"get".concat(t,"Attribute")},attacher:function(t,o,a){t.prototype[o]=function(t,e){var n;if("mixed"!==this.type&&"mixed"!==a&&a!==this.type)throw new E("Graph.".concat(o,": cannot find this type of edges in your ").concat(this.type," graph."));if(2<arguments.length){if(this.multi)throw new E("Graph.".concat(o,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,r=""+e;if(e=arguments[2],!(n=c(this,i,r,a)))throw new _("Graph.".concat(o,': could not find an edge for the given path ("').concat(i,'" - "').concat(r,'").'))}else{if("mixed"!==a)throw new E("Graph.".concat(o,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(n=this._edges.get(t=""+t)))throw new _("Graph.".concat(o,': could not find the "').concat(t,'" edge in the graph.'))}return n.attributes[e]}}},{name:function(t){return"get".concat(t,"Attributes")},attacher:function(t,r,o){t.prototype[r]=function(t){var e;if("mixed"!==this.type&&"mixed"!==o&&o!==this.type)throw new E("Graph.".concat(r,": cannot find this type of edges in your ").concat(this.type," graph."));if(1<arguments.length){if(this.multi)throw new E("Graph.".concat(r,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var n=""+t,i=""+arguments[1];if(!(e=c(this,n,i,o)))throw new _("Graph.".concat(r,': could not find an edge for the given path ("').concat(n,'" - "').concat(i,'").'))}else{if("mixed"!==o)throw new E("Graph.".concat(r,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(e=this._edges.get(t=""+t)))throw new _("Graph.".concat(r,': could not find the "').concat(t,'" edge in the graph.'))}return e.attributes}}},{name:function(t){return"has".concat(t,"Attribute")},attacher:function(t,o,a){t.prototype[o]=function(t,e){var n;if("mixed"!==this.type&&"mixed"!==a&&a!==this.type)throw new E("Graph.".concat(o,": cannot find this type of edges in your ").concat(this.type," graph."));if(2<arguments.length){if(this.multi)throw new E("Graph.".concat(o,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,r=""+e;if(e=arguments[2],!(n=c(this,i,r,a)))throw new _("Graph.".concat(o,': could not find an edge for the given path ("').concat(i,'" - "').concat(r,'").'))}else{if("mixed"!==a)throw new E("Graph.".concat(o,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(n=this._edges.get(t=""+t)))throw new _("Graph.".concat(o,': could not find the "').concat(t,'" edge in the graph.'))}return n.attributes.hasOwnProperty(e)}}},{name:function(t){return"set".concat(t,"Attribute")},attacher:function(t,a,s){t.prototype[a]=function(t,e,n){var i;if("mixed"!==this.type&&"mixed"!==s&&s!==this.type)throw new E("Graph.".concat(a,": cannot find this type of edges in your ").concat(this.type," graph."));if(3<arguments.length){if(this.multi)throw new E("Graph.".concat(a,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var r=""+t,o=""+e;if(e=arguments[2],n=arguments[3],!(i=c(this,r,o,s)))throw new _("Graph.".concat(a,': could not find an edge for the given path ("').concat(r,'" - "').concat(o,'").'))}else{if("mixed"!==s)throw new E("Graph.".concat(a,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(i=this._edges.get(t=""+t)))throw new _("Graph.".concat(a,': could not find the "').concat(t,'" edge in the graph.'))}return i.attributes[e]=n,this.emit("edgeAttributesUpdated",{key:i.key,type:"set",attributes:i.attributes,name:e}),this}}},{name:function(t){return"update".concat(t,"Attribute")},attacher:function(t,a,s){t.prototype[a]=function(t,e,n){var i;if("mixed"!==this.type&&"mixed"!==s&&s!==this.type)throw new E("Graph.".concat(a,": cannot find this type of edges in your ").concat(this.type," graph."));if(3<arguments.length){if(this.multi)throw new E("Graph.".concat(a,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var r=""+t,o=""+e;if(e=arguments[2],n=arguments[3],!(i=c(this,r,o,s)))throw new _("Graph.".concat(a,': could not find an edge for the given path ("').concat(r,'" - "').concat(o,'").'))}else{if("mixed"!==s)throw new E("Graph.".concat(a,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(i=this._edges.get(t=""+t)))throw new _("Graph.".concat(a,': could not find the "').concat(t,'" edge in the graph.'))}if("function"!=typeof n)throw new G("Graph.".concat(a,": updater should be a function."));return i.attributes[e]=n(i.attributes[e]),this.emit("edgeAttributesUpdated",{key:i.key,type:"set",attributes:i.attributes,name:e}),this}}},{name:function(t){return"remove".concat(t,"Attribute")},attacher:function(t,o,a){t.prototype[o]=function(t,e){var n;if("mixed"!==this.type&&"mixed"!==a&&a!==this.type)throw new E("Graph.".concat(o,": cannot find this type of edges in your ").concat(this.type," graph."));if(2<arguments.length){if(this.multi)throw new E("Graph.".concat(o,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,r=""+e;if(e=arguments[2],!(n=c(this,i,r,a)))throw new _("Graph.".concat(o,': could not find an edge for the given path ("').concat(i,'" - "').concat(r,'").'))}else{if("mixed"!==a)throw new E("Graph.".concat(o,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(n=this._edges.get(t=""+t)))throw new _("Graph.".concat(o,': could not find the "').concat(t,'" edge in the graph.'))}return delete n.attributes[e],this.emit("edgeAttributesUpdated",{key:n.key,type:"remove",attributes:n.attributes,name:e}),this}}},{name:function(t){return"replace".concat(t,"Attributes")},attacher:function(t,o,a){t.prototype[o]=function(t,e){var n;if("mixed"!==this.type&&"mixed"!==a&&a!==this.type)throw new E("Graph.".concat(o,": cannot find this type of edges in your ").concat(this.type," graph."));if(2<arguments.length){if(this.multi)throw new E("Graph.".concat(o,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,r=""+e;if(e=arguments[2],!(n=c(this,i,r,a)))throw new _("Graph.".concat(o,': could not find an edge for the given path ("').concat(i,'" - "').concat(r,'").'))}else{if("mixed"!==a)throw new E("Graph.".concat(o,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(n=this._edges.get(t=""+t)))throw new _("Graph.".concat(o,': could not find the "').concat(t,'" edge in the graph.'))}if(y(e))return n.attributes=e,this.emit("edgeAttributesUpdated",{key:n.key,type:"replace",attributes:n.attributes}),this;throw new G("Graph.".concat(o,": provided attributes are not a plain object."))}}},{name:function(t){return"merge".concat(t,"Attributes")},attacher:function(t,o,a){t.prototype[o]=function(t,e){var n;if("mixed"!==this.type&&"mixed"!==a&&a!==this.type)throw new E("Graph.".concat(o,": cannot find this type of edges in your ").concat(this.type," graph."));if(2<arguments.length){if(this.multi)throw new E("Graph.".concat(o,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,r=""+e;if(e=arguments[2],!(n=c(this,i,r,a)))throw new _("Graph.".concat(o,': could not find an edge for the given path ("').concat(i,'" - "').concat(r,'").'))}else{if("mixed"!==a)throw new E("Graph.".concat(o,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(n=this._edges.get(t=""+t)))throw new _("Graph.".concat(o,': could not find the "').concat(t,'" edge in the graph.'))}if(y(e))return k(n.attributes,e),this.emit("edgeAttributesUpdated",{key:n.key,type:"merge",attributes:n.attributes,data:e}),this;throw new G("Graph.".concat(o,": provided attributes are not a plain object."))}}},{name:function(t){return"update".concat(t,"Attributes")},attacher:function(t,o,a){t.prototype[o]=function(t,e){var n;if("mixed"!==this.type&&"mixed"!==a&&a!==this.type)throw new E("Graph.".concat(o,": cannot find this type of edges in your ").concat(this.type," graph."));if(2<arguments.length){if(this.multi)throw new E("Graph.".concat(o,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,r=""+e;if(e=arguments[2],!(n=c(this,i,r,a)))throw new _("Graph.".concat(o,': could not find an edge for the given path ("').concat(i,'" - "').concat(r,'").'))}else{if("mixed"!==a)throw new E("Graph.".concat(o,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(!(n=this._edges.get(t=""+t)))throw new _("Graph.".concat(o,': could not find the "').concat(t,'" edge in the graph.'))}if("function"!=typeof e)throw new G("Graph.".concat(o,": provided updater is not a function."));return n.attributes=e(n.attributes),this.emit("edgeAttributesUpdated",{key:n.key,type:"update",attributes:n.attributes}),this}}}],wt=x,bt=U,S=function(){var e=arguments,n=null,i=-1;return new wt(function(){for(var t=null;;){if(null===n){if(++i>=e.length)return{done:!0};n=bt(e[i])}if(!0!==(t=n.next()).done)break;n=null}return t})},U=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}],C=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}],b.prototype.wrap=function(t){null===this.A?this.A=t:null===this.B&&(this.B=t)},b.prototype.has=function(t){return null!==this.A&&t in this.A||null!==this.B&&t in this.B},vt=255&Math.floor(256*Math.random()),function(){return vt++},kt=new Set(["directed","undirected","mixed"]),xt=new Set(["domain","_events","_eventsCount","_maxListeners"]),Gt={allowSelfLoops:!0,multi:!1,type:"mixed"},l=function(o){function l(t){var e=o.call(this)||this;if("boolean"!=typeof(t=k({},Gt,t)).multi)throw new G("Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"".concat(t.multi,'".'));if(!kt.has(t.type))throw new G('Graph.constructor: invalid \'type\' option. Should be one of "mixed", "directed" or "undirected" but got "'.concat(t.type,'".'));if("boolean"!=typeof t.allowSelfLoops)throw new G("Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"".concat(t.allowSelfLoops,'".'));var n="mixed"===t.type?q:"directed"===t.type?$:H,i=(d(a(e),"NodeDataClass",n),"geid_"+vt+++"_"),r=0;return d(a(e),"_attributes",{}),d(a(e),"_nodes",new Map),d(a(e),"_edges",new Map),d(a(e),"_directedSize",0),d(a(e),"_undirectedSize",0),d(a(e),"_directedSelfLoopCount",0),d(a(e),"_undirectedSelfLoopCount",0),d(a(e),"_edgeKeyGenerator",function(){for(var t;t=i+r++,e._edges.has(t););return t}),d(a(e),"_options",t),xt.forEach(function(t){return d(a(e),t,e[t])}),s(a(e),"order",function(){return e._nodes.size}),s(a(e),"size",function(){return e._edges.size}),s(a(e),"directedSize",function(){return e._directedSize}),s(a(e),"undirectedSize",function(){return e._undirectedSize}),s(a(e),"selfLoopCount",function(){return e._directedSelfLoopCount+e._undirectedSelfLoopCount}),s(a(e),"directedSelfLoopCount",function(){return e._directedSelfLoopCount}),s(a(e),"undirectedSelfLoopCount",function(){return e._undirectedSelfLoopCount}),s(a(e),"multi",e._options.multi),s(a(e),"type",e._options.type),s(a(e),"allowSelfLoops",e._options.allowSelfLoops),s(a(e),"implementation",function(){return"graphology"}),e}r(l,o);var t=l.prototype;return t._resetInstanceCounters=function(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0},t.hasNode=function(t){return this._nodes.has(""+t)},t.hasDirectedEdge=function(t,e){if("undirected"===this.type)return!1;var n;if(1===arguments.length)return!!(n=this._edges.get(""+t))&&!n.undirected;if(2===arguments.length)return e=""+e,!!(n=this._nodes.get(t=""+t))&&n.out.hasOwnProperty(e);throw new G("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},t.hasUndirectedEdge=function(t,e){if("directed"===this.type)return!1;var n;if(1===arguments.length)return!!(n=this._edges.get(""+t))&&n.undirected;if(2===arguments.length)return e=""+e,!!(n=this._nodes.get(t=""+t))&&n.undirected.hasOwnProperty(e);throw new G("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},t.hasEdge=function(t,e){if(1===arguments.length)return this._edges.has(""+t);if(2===arguments.length)return e=""+e,!!(t=this._nodes.get(t=""+t))&&(void 0!==t.out&&t.out.hasOwnProperty(e)||void 0!==t.undirected&&t.undirected.hasOwnProperty(e));throw new G("Graph.hasEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},t.directedEdge=function(t,e){if("undirected"!==this.type){if(t=""+t,e=""+e,this.multi)throw new E("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");var n=this._nodes.get(t);if(!n)throw new _('Graph.directedEdge: could not find the "'.concat(t,'" source node in the graph.'));if(this._nodes.has(e))return(t=n.out&&n.out[e]||void 0)?t.key:void 0;throw new _('Graph.directedEdge: could not find the "'.concat(e,'" target node in the graph.'))}},t.undirectedEdge=function(t,e){if("directed"!==this.type){if(t=""+t,e=""+e,this.multi)throw new E("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");var n=this._nodes.get(t);if(!n)throw new _('Graph.undirectedEdge: could not find the "'.concat(t,'" source node in the graph.'));if(this._nodes.has(e))return(t=n.undirected&&n.undirected[e]||void 0)?t.key:void 0;throw new _('Graph.undirectedEdge: could not find the "'.concat(e,'" target node in the graph.'))}},t.edge=function(t,e){if(this.multi)throw new E("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");e=""+e;var n=this._nodes.get(t=""+t);if(!n)throw new _('Graph.edge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new _('Graph.edge: could not find the "'.concat(e,'" target node in the graph.'));t=n.out&&n.out[e]||n.undirected&&n.undirected[e]||void 0;if(t)return t.key},t.areDirectedNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"undirected"!==this.type&&(e in n.in||e in n.out);throw new _('Graph.areDirectedNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.areOutNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"undirected"!==this.type&&e in n.out;throw new _('Graph.areOutNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.areInNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"undirected"!==this.type&&e in n.in;throw new _('Graph.areInNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.areUndirectedNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"directed"!==this.type&&e in n.undirected;throw new _('Graph.areUndirectedNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.areNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"undirected"!==this.type&&(e in n.in||e in n.out)||"directed"!==this.type&&e in n.undirected;throw new _('Graph.areNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.areInboundNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"undirected"!==this.type&&e in n.in||"directed"!==this.type&&e in n.undirected;throw new _('Graph.areInboundNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.areOutboundNeighbors=function(t,e){e=""+e;var n=this._nodes.get(t=""+t);if(n)return"undirected"!==this.type&&e in n.out||"directed"!==this.type&&e in n.undirected;throw new _('Graph.areOutboundNeighbors: could not find the "'.concat(t,'" node in the graph.'))},t.inDegree=function(t){var e=this._nodes.get(t=""+t);if(e)return"undirected"===this.type?0:e.inDegree;throw new _('Graph.inDegree: could not find the "'.concat(t,'" node in the graph.'))},t.outDegree=function(t){var e=this._nodes.get(t=""+t);if(e)return"undirected"===this.type?0:e.outDegree;throw new _('Graph.outDegree: could not find the "'.concat(t,'" node in the graph.'))},t.directedDegree=function(t){var e=this._nodes.get(t=""+t);if(e)return"undirected"===this.type?0:e.inDegree+e.outDegree;throw new _('Graph.directedDegree: could not find the "'.concat(t,'" node in the graph.'))},t.undirectedDegree=function(t){var e=this._nodes.get(t=""+t);if(e)return"directed"===this.type?0:e.undirectedDegree;throw new _('Graph.undirectedDegree: could not find the "'.concat(t,'" node in the graph.'))},t.inboundDegree=function(t){var e,n=this._nodes.get(t=""+t);if(n)return e=0,"directed"!==this.type&&(e+=n.undirectedDegree),"undirected"!==this.type&&(e+=n.inDegree),e;throw new _('Graph.inboundDegree: could not find the "'.concat(t,'" node in the graph.'))},t.outboundDegree=function(t){var e,n=this._nodes.get(t=""+t);if(n)return e=0,"directed"!==this.type&&(e+=n.undirectedDegree),"undirected"!==this.type&&(e+=n.outDegree),e;throw new _('Graph.outboundDegree: could not find the "'.concat(t,'" node in the graph.'))},t.degree=function(t){var e,n=this._nodes.get(t=""+t);if(n)return e=0,"directed"!==this.type&&(e+=n.undirectedDegree),"undirected"!==this.type&&(e+=n.inDegree+n.outDegree),e;throw new _('Graph.degree: could not find the "'.concat(t,'" node in the graph.'))},t.inDegreeWithoutSelfLoops=function(t){var e=this._nodes.get(t=""+t);if(e)return"undirected"===this.type?0:e.inDegree-e.directedLoops;throw new _('Graph.inDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.outDegreeWithoutSelfLoops=function(t){var e=this._nodes.get(t=""+t);if(e)return"undirected"===this.type?0:e.outDegree-e.directedLoops;throw new _('Graph.outDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.directedDegreeWithoutSelfLoops=function(t){var e=this._nodes.get(t=""+t);if(e)return"undirected"===this.type?0:e.inDegree+e.outDegree-2*e.directedLoops;throw new _('Graph.directedDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.undirectedDegreeWithoutSelfLoops=function(t){var e=this._nodes.get(t=""+t);if(e)return"directed"===this.type?0:e.undirectedDegree-2*e.undirectedLoops;throw new _('Graph.undirectedDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.inboundDegreeWithoutSelfLoops=function(t){var e,n,i=this._nodes.get(t=""+t);if(i)return n=e=0,"directed"!==this.type&&(e+=i.undirectedDegree,n+=2*i.undirectedLoops),"undirected"!==this.type&&(e+=i.inDegree,n+=i.directedLoops),e-n;throw new _('Graph.inboundDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.outboundDegreeWithoutSelfLoops=function(t){var e,n,i=this._nodes.get(t=""+t);if(i)return n=e=0,"directed"!==this.type&&(e+=i.undirectedDegree,n+=2*i.undirectedLoops),"undirected"!==this.type&&(e+=i.outDegree,n+=i.directedLoops),e-n;throw new _('Graph.outboundDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.degreeWithoutSelfLoops=function(t){var e,n,i=this._nodes.get(t=""+t);if(i)return n=e=0,"directed"!==this.type&&(e+=i.undirectedDegree,n+=2*i.undirectedLoops),"undirected"!==this.type&&(e+=i.inDegree+i.outDegree,n+=2*i.directedLoops),e-n;throw new _('Graph.degreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'))},t.source=function(t){var e=this._edges.get(t=""+t);if(e)return e.source.key;throw new _('Graph.source: could not find the "'.concat(t,'" edge in the graph.'))},t.target=function(t){var e=this._edges.get(t=""+t);if(e)return e.target.key;throw new _('Graph.target: could not find the "'.concat(t,'" edge in the graph.'))},t.extremities=function(t){var e=this._edges.get(t=""+t);if(e)return[e.source.key,e.target.key];throw new _('Graph.extremities: could not find the "'.concat(t,'" edge in the graph.'))},t.opposite=function(t,e){t=""+t;var n=this._edges.get(e=""+e);if(!n)throw new _('Graph.opposite: could not find the "'.concat(e,'" edge in the graph.'));var i=n.source.key,n=n.target.key;if(t===i)return n;if(t===n)return i;throw new _('Graph.opposite: the "'.concat(t,'" node is not attached to the "').concat(e,'" edge (').concat(i,", ").concat(n,")."))},t.hasExtremity=function(t,e){e=""+e;var n=this._edges.get(t=""+t);if(n)return n.source.key===e||n.target.key===e;throw new _('Graph.hasExtremity: could not find the "'.concat(t,'" edge in the graph.'))},t.isUndirected=function(t){var e=this._edges.get(t=""+t);if(e)return e.undirected;throw new _('Graph.isUndirected: could not find the "'.concat(t,'" edge in the graph.'))},t.isDirected=function(t){var e=this._edges.get(t=""+t);if(e)return!e.undirected;throw new _('Graph.isDirected: could not find the "'.concat(t,'" edge in the graph.'))},t.isSelfLoop=function(t){var e=this._edges.get(t=""+t);if(e)return e.source===e.target;throw new _('Graph.isSelfLoop: could not find the "'.concat(t,'" edge in the graph.'))},t.addNode=function(t,e){return function(t,e,n){if(n&&!y(n))throw new G('Graph.addNode: invalid attributes. Expecting an object but got "'.concat(n,'"'));if(n=n||{},t._nodes.has(e=""+e))throw new E('Graph.addNode: the "'.concat(e,'" node already exist in the graph.'));var i=new t.NodeDataClass(e,n);return t._nodes.set(e,i),t.emit("nodeAdded",{key:e,attributes:n}),i}(this,t,e).key},t.mergeNode=function(t,e){if(e&&!y(e))throw new G('Graph.mergeNode: invalid attributes. Expecting an object but got "'.concat(e,'"'));e=e||{};var n=this._nodes.get(t=""+t);return n?(e&&(k(n.attributes,e),this.emit("nodeAttributesUpdated",{type:"merge",key:t,attributes:n.attributes,data:e})),[t,!1]):(n=new this.NodeDataClass(t,e),this._nodes.set(t,n),this.emit("nodeAdded",{key:t,attributes:e}),[t,!0])},t.updateNode=function(t,e){if(e&&"function"!=typeof e)throw new G('Graph.updateNode: invalid updater function. Expecting a function but got "'.concat(e,'"'));var n,i=this._nodes.get(t=""+t);return i?(e&&(n=i.attributes,i.attributes=e(n),this.emit("nodeAttributesUpdated",{type:"replace",key:t,attributes:i.attributes})),[t,!1]):(n=e?e({}):{},i=new this.NodeDataClass(t,n),this._nodes.set(t,i),this.emit("nodeAdded",{key:t,attributes:n}),[t,!0])},t.dropNode=function(t){var e,n=this._nodes.get(t=""+t);if(!n)throw new _('Graph.dropNode: could not find the "'.concat(t,'" node in the graph.'));if("undirected"!==this.type){for(var i in n.out)for(e=n.out[i];g(this,e),e=e.next;);for(var r in n.in)for(e=n.in[r];g(this,e),e=e.next;);}if("directed"!==this.type)for(var o in n.undirected)for(e=n.undirected[o];g(this,e),e=e.next;);this._nodes.delete(t),this.emit("nodeDropped",{key:t,attributes:n.attributes})},t.dropEdge=function(t){var e;if(1<arguments.length){var n=""+arguments[0],i=""+arguments[1];if(!(e=c(this,n,i,this.type)))throw new _('Graph.dropEdge: could not find the "'.concat(n,'" -> "').concat(i,'" edge in the graph.'))}else if(!(e=this._edges.get(t=""+t)))throw new _('Graph.dropEdge: could not find the "'.concat(t,'" edge in the graph.'));return g(this,e),this},t.dropDirectedEdge=function(t,e){if(arguments.length<2)throw new E("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new E("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");var n=c(this,t=""+t,e=""+e,"directed");if(n)return g(this,n),this;throw new _('Graph.dropDirectedEdge: could not find a "'.concat(t,'" -> "').concat(e,'" edge in the graph.'))},t.dropUndirectedEdge=function(t,e){if(arguments.length<2)throw new E("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new E("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");var n=c(this,t,e,"undirected");if(n)return g(this,n),this;throw new _('Graph.dropUndirectedEdge: could not find a "'.concat(t,'" -> "').concat(e,'" edge in the graph.'))},t.clear=function(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")},t.clearEdges=function(){for(var t,e=this._nodes.values();!0!==(t=e.next()).done;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")},t.getAttribute=function(t){return this._attributes[t]},t.getAttributes=function(){return this._attributes},t.hasAttribute=function(t){return this._attributes.hasOwnProperty(t)},t.setAttribute=function(t,e){return this._attributes[t]=e,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:t}),this},t.updateAttribute=function(t,e){if("function"!=typeof e)throw new G("Graph.updateAttribute: updater should be a function.");var n=this._attributes[t];return this._attributes[t]=e(n),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:t}),this},t.removeAttribute=function(t){return delete this._attributes[t],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:t}),this},t.replaceAttributes=function(t){if(y(t))return this._attributes=t,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this;throw new G("Graph.replaceAttributes: provided attributes are not a plain object.")},t.mergeAttributes=function(t){if(y(t))return k(this._attributes,t),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:t}),this;throw new G("Graph.mergeAttributes: provided attributes are not a plain object.")},t.updateAttributes=function(t){if("function"!=typeof t)throw new G("Graph.updateAttributes: provided updater is not a function.");return this._attributes=t(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this},t.updateEachNodeAttributes=function(t,e){if("function"!=typeof t)throw new G("Graph.updateEachNodeAttributes: expecting an updater function.");if(e&&!P(e))throw new G("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");for(var n,i=this._nodes.values();!0!==(n=i.next()).done;)(n=n.value).attributes=t(n.key,n.attributes);this.emit("eachNodeAttributesUpdated",{hints:e||null})},t.updateEachEdgeAttributes=function(t,e){if("function"!=typeof t)throw new G("Graph.updateEachEdgeAttributes: expecting an updater function.");if(e&&!P(e))throw new G("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");for(var n,i,r,o=this._edges.values();!0!==(n=o.next()).done;)i=(n=n.value).source,r=n.target,n.attributes=t(n.key,n.attributes,i.key,r.key,i.attributes,r.attributes,n.undirected);this.emit("eachEdgeAttributesUpdated",{hints:e||null})},t.forEachAdjacencyEntry=function(t){if("function"!=typeof t)throw new G("Graph.forEachAdjacencyEntry: expecting a callback.");n(!1,!1,!1,this,t)},t.forEachAdjacencyEntryWithOrphans=function(t){if("function"!=typeof t)throw new G("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");n(!1,!1,!0,this,t)},t.forEachAssymetricAdjacencyEntry=function(t){if("function"!=typeof t)throw new G("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");n(!1,!0,!1,this,t)},t.forEachAssymetricAdjacencyEntryWithOrphans=function(t){if("function"!=typeof t)throw new G("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");n(!1,!0,!0,this,t)},t.nodes=function(){return"function"==typeof Array.from?Array.from(this._nodes.keys()):mt(this._nodes.keys(),this._nodes.size)},t.forEachNode=function(t){if("function"!=typeof t)throw new G("Graph.forEachNode: expecting a callback.");for(var e,n=this._nodes.values();!0!==(e=n.next()).done;)t((e=e.value).key,e.attributes)},t.findNode=function(t){if("function"!=typeof t)throw new G("Graph.findNode: expecting a callback.");for(var e,n=this._nodes.values();!0!==(e=n.next()).done;)if(t((e=e.value).key,e.attributes))return e.key},t.mapNodes=function(t){if("function"!=typeof t)throw new G("Graph.mapNode: expecting a callback.");for(var e,n=this._nodes.values(),i=new Array(this.order),r=0;!0!==(e=n.next()).done;)e=e.value,i[r++]=t(e.key,e.attributes);return i},t.someNode=function(t){if("function"!=typeof t)throw new G("Graph.someNode: expecting a callback.");for(var e,n=this._nodes.values();!0!==(e=n.next()).done;)if(t((e=e.value).key,e.attributes))return!0;return!1},t.everyNode=function(t){if("function"!=typeof t)throw new G("Graph.everyNode: expecting a callback.");for(var e,n=this._nodes.values();!0!==(e=n.next()).done;)if(!t((e=e.value).key,e.attributes))return!1;return!0},t.filterNodes=function(t){if("function"!=typeof t)throw new G("Graph.filterNodes: expecting a callback.");for(var e,n=this._nodes.values(),i=[];!0!==(e=n.next()).done;)t((e=e.value).key,e.attributes)&&i.push(e.key);return i},t.reduceNodes=function(t,e){if("function"!=typeof t)throw new G("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new G("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");for(var n,i=e,r=this._nodes.values();!0!==(n=r.next()).done;)i=t(i,(n=n.value).key,n.attributes);return i},t.nodeEntries=function(){var e=this._nodes.values();return new x(function(){var t=e.next();return t.done?t:{value:{node:(t=t.value).key,attributes:t.attributes},done:!1}})},t.export=function(){var i=this,n=new Array(this._nodes.size),r=0,o=(this._nodes.forEach(function(t,e){n[r++]=(e={key:e},T((t=t).attributes)||(e.attributes=k({},t.attributes)),e)}),new Array(this._edges.size)),r=0;return this._edges.forEach(function(t,e){var n;o[r++]=(n=i.type,t={key:e,source:(e=t).source.key,target:e.target.key},T(e.attributes)||(t.attributes=k({},e.attributes)),"mixed"===n&&e.undirected&&(t.undirected=!0),t)}),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:n,edges:o}},t.import=function(t){var e,n,i,r,s=this,c=1<arguments.length&&void 0!==arguments[1]&&arguments[1];if(t instanceof l)t.forEachNode(function(t,e){c?s.mergeNode(t,e):s.addNode(t,e)}),t.forEachEdge(function(t,e,n,i,r,o,a){c?a?s.mergeUndirectedEdgeWithKey(t,n,i,e):s.mergeDirectedEdgeWithKey(t,n,i,e):a?s.addUndirectedEdgeWithKey(t,n,i,e):s.addDirectedEdgeWithKey(t,n,i,e)});else{if(!y(t))throw new G("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(t.attributes){if(!y(t.attributes))throw new G("Graph.import: invalid attributes. Expecting a plain object.");c?this.mergeAttributes(t.attributes):this.replaceAttributes(t.attributes)}if(t.nodes){if(i=t.nodes,!Array.isArray(i))throw new G("Graph.import: invalid nodes. Expecting an array.");for(e=0,n=i.length;e<n;e++){o=void 0;var o=a=i[e];if(!y(o))throw new G('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in o))throw new G("Graph.import: serialized node is missing its key.");if("attributes"in o&&(!y(o.attributes)||null===o.attributes))throw new G("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");var o=a.key,a=a.attributes;c?this.mergeNode(o,a):this.addNode(o,a)}}if(t.edges){var u=!1;if("undirected"===this.type&&(u=!0),i=t.edges,!Array.isArray(i))throw new G("Graph.import: invalid edges. Expecting an array.");for(e=0,n=i.length;e<n;e++){d=void 0;var d=r=i[e];if(!y(d))throw new G('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in d))throw new G("Graph.import: serialized edge is missing its source.");if(!("target"in d))throw new G("Graph.import: serialized edge is missing its target.");if("attributes"in d&&(!y(d.attributes)||null===d.attributes))throw new G("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in d&&"boolean"!=typeof d.undirected)throw new G("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.");var d=r.source,h=r.target,p=r.attributes,f=r.undirected,f=void 0===f?u:f;"key"in r?(c?f?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:f?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey).call(this,r.key,d,h,p):(c?f?this.mergeUndirectedEdge:this.mergeDirectedEdge:f?this.addUndirectedEdge:this.addDirectedEdge).call(this,d,h,p)}}}return this},t.nullCopy=function(t){t=new l(k({},this._options,t));return t.replaceAttributes(k({},this.getAttributes())),t},t.emptyCopy=function(t){var i=this.nullCopy(t);return this._nodes.forEach(function(t,e){var n=k({},t.attributes);t=new i.NodeDataClass(e,n),i._nodes.set(e,t)}),i},t.copy=function(t){if("string"==typeof(t=t||{}).type&&t.type!==this.type&&"mixed"!==t.type)throw new E('Graph.copy: cannot create an incompatible copy from "'.concat(this.type,'" type to "').concat(t.type,'" because this would mean losing information about the current graph.'));if("boolean"==typeof t.multi&&t.multi!==this.multi&&!0!==t.multi)throw new E("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if("boolean"==typeof t.allowSelfLoops&&t.allowSelfLoops!==this.allowSelfLoops&&!0!==t.allowSelfLoops)throw new E("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");for(var e,n=this.emptyCopy(t),i=this._edges.values();!0!==(e=i.next()).done;)st(n,"copy",!1,(e=e.value).undirected,e.key,e.source.key,e.target.key,k({},e.attributes));return n},t.toJSON=function(){return this.export()},t.toString=function(){return"[object Graph]"},t.inspect=function(){var t,s=this,n={},c=(this._nodes.forEach(function(t,e){n[e]=t.attributes}),{}),u={},e=(this._edges.forEach(function(t,e){var n=t.undirected?"--":"->",i="",r=t.source.key,o=t.target.key,a=(t.undirected&&o<r&&(a=r,r=o,o=a),"(".concat(r,")").concat(n,"(").concat(o,")"));e.startsWith("geid_")?s.multi&&(void 0===u[a]?u[a]=0:u[a]++,i+="".concat(u[a],". ")):i+="[".concat(e,"]: "),c[i+=a]=t.attributes}),{});for(t in this)this.hasOwnProperty(t)&&!xt.has(t)&&"function"!=typeof this[t]&&"symbol"!==i(t)&&(e[t]=this[t]);return e.attributes=this._attributes,e.nodes=n,e.edges=c,d(e,"constructor",this.constructor),e},l}(B.exports.EventEmitter),"undefined"!=typeof Symbol&&(l.prototype[Symbol.for("nodejs.util.inspect.custom")]=l.prototype.inspect),[{name:function(t){return"".concat(t,"Edge")},generateKey:!0},{name:function(t){return"".concat(t,"DirectedEdge")},generateKey:!0,type:"directed"},{name:function(t){return"".concat(t,"UndirectedEdge")},generateKey:!0,type:"undirected"},{name:function(t){return"".concat(t,"EdgeWithKey")}},{name:function(t){return"".concat(t,"DirectedEdgeWithKey")},type:"directed"},{name:function(t){return"".concat(t,"UndirectedEdgeWithKey")},type:"undirected"}].forEach(function(s){["add","merge","update"].forEach(function(r){var o=s.name(r),a="add"===r?st:ct;s.generateKey?l.prototype[o]=function(t,e,n){return a(this,o,!0,"undirected"===(s.type||this.type),null,t,e,n,"update"===r)}:l.prototype[o]=function(t,e,n,i){return a(this,o,!1,"undirected"===(s.type||this.type),t,e,n,i,"update"===r)}})}),A=l,j.forEach(function(t){var e=t.name,t=t.attacher;t(A,e("Node"),0),t(A,e("Source"),1),t(A,e("Target"),2),t(A,e("Opposite"),3)}),L=l,N.forEach(function(t){var e=t.name,t=t.attacher;t(L,e("Edge"),"mixed"),t(L,e("DirectedEdge"),"directed"),t(L,e("UndirectedEdge"),"undirected")}),D=l,U.forEach(function(t){var p,f,l,r,o,a,e,n,d,s,h,i,u,g,y,m;g=t.name,y=t.type,m=t.direction,D.prototype[g]=function(t,e){if("mixed"!==y&&"mixed"!==this.type&&y!==this.type)return[];if(arguments.length){if(1===arguments.length){var n=this._nodes.get(t=""+t);if(void 0===n)throw new _("Graph.".concat(g,': could not find the "').concat(t,'" node in the graph.'));return a=this.multi,r="mixed"===y?this.type:y,it(!(i=[]),a,r,m,n,function(t){i.push(t)}),i}var i,r,o;if(2!==arguments.length)throw new G("Graph.".concat(g,": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length,")."));e=""+e;var a=this._nodes.get(t=""+t);if(!a)throw new _("Graph.".concat(g,':  could not find the "').concat(t,'" source node in the graph.'));if(this._nodes.has(e))return r=y,n=this.multi,rt(!(o=[]),r,n,m,a,e,function(t){o.push(t)}),o;throw new _("Graph.".concat(g,':  could not find the "').concat(e,'" target node in the graph.'))}t=this,e=y;if(0===t.size)return[];if("mixed"===e||e===t.type)return"function"==typeof Array.from?Array.from(t._edges.keys()):mt(t._edges.keys(),t._edges.size);for(var s,c="undirected"===e?t.undirectedSize:t.directedSize,u=new Array(c),d="undirected"===e,h=t._edges.values(),p=0;!0!==(s=h.next()).done;)(s=s.value).undirected===d&&(u[p++]=s.key);return u},e=D,n=t.name,d=t.type,s=t.direction,h="forEach"+n[0].toUpperCase()+n.slice(1,-1),e.prototype[h]=function(t,e,n){if("mixed"===d||"mixed"===this.type||d===this.type){if(1===arguments.length)return nt(!1,this,d,n=t);if(2===arguments.length){n=e;var i=this._nodes.get(t=""+t);if(void 0===i)throw new _("Graph.".concat(h,': could not find the "').concat(t,'" node in the graph.'));return it(!1,this.multi,"mixed"===d?this.type:d,s,i,n)}if(3!==arguments.length)throw new G("Graph.".concat(h,": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length,")."));e=""+e;i=this._nodes.get(t=""+t);if(!i)throw new _("Graph.".concat(h,':  could not find the "').concat(t,'" source node in the graph.'));if(this._nodes.has(e))return rt(!1,d,this.multi,s,i,e,n);throw new _("Graph.".concat(h,':  could not find the "').concat(e,'" target node in the graph.'))}},i="map"+n[0].toUpperCase()+n.slice(1),e.prototype[i]=function(){var s,t,c,e=Array.prototype.slice.call(arguments),u=e.pop();return 0===e.length?(t=0,"directed"!==d&&(t+=this.undirectedSize),"undirected"!==d&&(t+=this.directedSize),s=new Array(t),c=0,e.push(function(t,e,n,i,r,o,a){s[c++]=u(t,e,n,i,r,o,a)})):(s=[],e.push(function(t,e,n,i,r,o,a){s.push(u(t,e,n,i,r,o,a))})),this[h].apply(this,e),s},i="filter"+n[0].toUpperCase()+n.slice(1),e.prototype[i]=function(){var t=Array.prototype.slice.call(arguments),s=t.pop(),c=[];return t.push(function(t,e,n,i,r,o,a){s(t,e,n,i,r,o,a)&&c.push(t)}),this[h].apply(this,t),c},u="reduce"+n[0].toUpperCase()+n.slice(1),e.prototype[u]=function(){var s,t,e=Array.prototype.slice.call(arguments);if(e.length<2||4<e.length)throw new G("Graph.".concat(u,": invalid number of arguments (expecting 2, 3 or 4 and got ").concat(e.length,")."));if("function"==typeof e[e.length-1]&&"function"!=typeof e[e.length-2])throw new G("Graph.".concat(u,": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array."));2===e.length?(s=e[0],t=e[1],e=[]):3===e.length?(s=e[1],t=e[2],e=[e[0]]):4===e.length&&(s=e[2],t=e[3],e=[e[0],e[1]]);var c=t;return e.push(function(t,e,n,i,r,o,a){c=s(c,t,e,n,i,r,o,a)}),this[h].apply(this,e),c},i=D,n=t.name,r=t.type,o=t.direction,a="find"+n[0].toUpperCase()+n.slice(1,-1),i.prototype[a]=function(t,e,n){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return!1;if(1===arguments.length)return nt(!0,this,r,n=t);if(2===arguments.length){n=e;var i=this._nodes.get(t=""+t);if(void 0===i)throw new _("Graph.".concat(a,': could not find the "').concat(t,'" node in the graph.'));return it(!0,this.multi,"mixed"===r?this.type:r,o,i,n)}if(3!==arguments.length)throw new G("Graph.".concat(a,": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length,")."));e=""+e;i=this._nodes.get(t=""+t);if(!i)throw new _("Graph.".concat(a,':  could not find the "').concat(t,'" source node in the graph.'));if(this._nodes.has(e))return rt(!0,r,this.multi,o,i,e,n);throw new _("Graph.".concat(a,':  could not find the "').concat(e,'" target node in the graph.'))},e="some"+n[0].toUpperCase()+n.slice(1,-1),i.prototype[e]=function(){var t=Array.prototype.slice.call(arguments),s=t.pop();return t.push(function(t,e,n,i,r,o,a){return s(t,e,n,i,r,o,a)}),!!this[a].apply(this,t)},e="every"+n[0].toUpperCase()+n.slice(1,-1),i.prototype[e]=function(){var t=Array.prototype.slice.call(arguments),s=t.pop();return t.push(function(t,e,n,i,r,o,a){return!s(t,e,n,i,r,o,a)}),!this[a].apply(this,t)},n=D,i=t.name,p=t.type,f=t.direction,l=i.slice(0,-1)+"Entries",n.prototype[l]=function(t,e){if("mixed"!==p&&"mixed"!==this.type&&p!==this.type)return x.empty();if(!arguments.length)return d=p,0===(o=this).size?x.empty():(n="mixed"!==d&&d!==o.type,i="undirected"===d,r=o._edges.values(),new x(function(){for(var t,e;;){if((t=r.next()).done)return t;if(e=t.value,!n||e.undirected===i)break}return{value:{edge:e.key,attributes:e.attributes,source:e.source.key,target:e.target.key,sourceAttributes:e.source.attributes,targetAttributes:e.target.attributes,undirected:e.undirected},done:!1}}));var n,i,r,o,a,s,c,u;if(1===arguments.length){var d=this._nodes.get(t=""+t);if(d)return o=p,h=f,a=d,s=x.empty(),"undirected"!==o&&("out"!==h&&void 0!==a.in&&(s=S(s,w(a.in))),"in"!==h)&&void 0!==a.out&&(s=S(s,w(a.out,h?void 0:a.key))),s="directed"!==o&&void 0!==a.undirected?S(s,w(a.undirected)):s;throw new _("Graph.".concat(l,': could not find the "').concat(t,'" node in the graph.'))}if(2!==arguments.length)throw new G("Graph.".concat(l,": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length,")."));e=""+e;var h=this._nodes.get(t=""+t);if(!h)throw new _("Graph.".concat(l,':  could not find the "').concat(t,'" source node in the graph.'));if(this._nodes.has(e))return a=p,s=f,t=h,c=e,u=x.empty(),"undirected"!==a&&(void 0!==t.in&&"out"!==s&&c in t.in&&(u=S(u,et(t.in,c))),void 0!==t.out)&&"in"!==s&&c in t.out&&(s||t.key!==c)&&(u=S(u,et(t.out,c))),u="directed"!==a&&void 0!==t.undirected&&c in t.undirected?S(u,et(t.undirected,c)):u;throw new _("Graph.".concat(l,':  could not find the "').concat(e,'" target node in the graph.'))}}),O=l,C.forEach(function(t){var o,a,s,i,r,c,e,n,u,d,h,p,f,l,g,y;l=t.name,g=t.type,y=t.direction,O.prototype[l]=function(t){if("mixed"!==g&&"mixed"!==this.type&&g!==this.type)return[];var e=this._nodes.get(t=""+t);if(void 0===e)throw new _("Graph.".concat(l,': could not find the "').concat(t,'" node in the graph.'));var t="mixed"===g?this.type:g,n=y;if("mixed"!==t){if("undirected"===t)return Object.keys(e.undirected);if("string"==typeof n)return Object.keys(e[n])}var i=[];return ot(!1,t,n,e,function(t){i.push(t)}),i},e=O,n=t.name,u=t.type,d=t.direction,h="forEach"+n[0].toUpperCase()+n.slice(1,-1),e.prototype[h]=function(t,e){if("mixed"===u||"mixed"===this.type||u===this.type){var n=this._nodes.get(t=""+t);if(void 0===n)throw new _("Graph.".concat(h,': could not find the "').concat(t,'" node in the graph.'));ot(!1,"mixed"===u?this.type:u,d,n,e)}},p="map"+n[0].toUpperCase()+n.slice(1),e.prototype[p]=function(t,n){var i=[];return this[h](t,function(t,e){i.push(n(t,e))}),i},p="filter"+n[0].toUpperCase()+n.slice(1),e.prototype[p]=function(t,n){var i=[];return this[h](t,function(t,e){n(t,e)&&i.push(t)}),i},f="reduce"+n[0].toUpperCase()+n.slice(1),e.prototype[f]=function(t,n,e){if(arguments.length<3)throw new G("Graph.".concat(f,": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array."));var i=e;return this[h](t,function(t,e){i=n(i,t,e)}),i},p=O,n=t.name,i=t.type,r=t.direction,n=n[0].toUpperCase()+n.slice(1,-1),c="find"+n,p.prototype[c]=function(t,e){if("mixed"===i||"mixed"===this.type||i===this.type){var n=this._nodes.get(t=""+t);if(void 0===n)throw new _("Graph.".concat(c,': could not find the "').concat(t,'" node in the graph.'));return ot(!0,"mixed"===i?this.type:i,r,n,e)}},e="some"+n,p.prototype[e]=function(t,e){return!!this[c](t,e)},e="every"+n,p.prototype[e]=function(t,n){return!this[c](t,function(t,e){return!n(t,e)})},n=O,p=t.name,o=t.type,a=t.direction,s=p.slice(0,-1)+"Entries",n.prototype[s]=function(t){if("mixed"!==o&&"mixed"!==this.type&&o!==this.type)return x.empty();var e=this._nodes.get(t=""+t);if(void 0===e)throw new _("Graph.".concat(s,': could not find the "').concat(t,'" node in the graph.'));var t="mixed"===o?this.type:o,n=a;if("mixed"!==t){if("undirected"===t)return v(null,e,e.undirected);if("string"==typeof n)return v(null,e,e[n])}var i=x.empty(),r=new b;return"undirected"!==t&&("out"!==n&&(i=S(i,v(r,e,e.in))),"in"!==n)&&(i=S(i,v(r,e,e.out))),i="directed"!==t?S(i,v(r,e,e.undirected)):i}}),B=function(e){function t(t){t=k({type:"directed"},t);if("multi"in t&&!1!==t.multi)throw new G("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if("directed"!==t.type)throw new G('DirectedGraph.from: inconsistent "'+t.type+'" type in given options!');return e.call(this,t)||this}return r(t,e),t}(l),j=function(e){function t(t){t=k({type:"undirected"},t);if("multi"in t&&!1!==t.multi)throw new G("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if("undirected"!==t.type)throw new G('UndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');return e.call(this,t)||this}return r(t,e),t}(l),N=function(e){function t(t){t=k({multi:!0},t);if("multi"in t&&!0!==t.multi)throw new G("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");return e.call(this,t)||this}return r(t,e),t}(l),U=function(e){function t(t){t=k({type:"directed",multi:!0},t);if("multi"in t&&!0!==t.multi)throw new G("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if("directed"!==t.type)throw new G('MultiDirectedGraph.from: inconsistent "'+t.type+'" type in given options!');return e.call(this,t)||this}return r(t,e),t}(l),C=function(e){function t(t){t=k({type:"undirected",multi:!0},t);if("multi"in t&&!0!==t.multi)throw new G("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if("undirected"!==t.type)throw new G('MultiUndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');return e.call(this,t)||this}return r(t,e),t}(l),t(l),t(B),t(j),t(N),t(U),t(C),(l.Graph=l).DirectedGraph=B,l.UndirectedGraph=j,l.MultiGraph=N,l.MultiDirectedGraph=U,l.MultiUndirectedGraph=C,l.InvalidArgumentsGraphError=G,l.NotFoundGraphError=_,l.UsageGraphError=E,l)}();const ResourcefulMixin={createId(t="",e=2){t+=randomAlpha(e,31);return this.id=t}},SerializableMixin={toString(){return JSON.stringify({...this},null,2)},toJSON(){return{...this}}};class Vertex{constructor({id:t,tick:e,bindTo:n,params:i,prefix:r="v#"}){Object.assign(this,ResourcefulMixin),Object.assign(this,SerializableMixin),this.id=t||this.createId(r,2),this.value=0,this.params=i,this.bindTo=n,this.tickFn=e||(t=>t)}}class Action extends Vertex{constructor({id:t,bindTo:e,params:n,tick:i}={}){super({id:t,tick:i,bindTo:e,prefix:"s#"}),Object.assign(this,{params:n})}tick(t){var e=this.bindTo?this.tickFn.bind(this.bindTo):this.tickFn;return this.value=e(t||0),this.value}}class Neuron extends Vertex{constructor({id:t}={}){super({id:t,prefix:"n#"})}}class Sensor extends Vertex{constructor({id:t,tick:e,bindTo:n,config:i,params:r}={}){super({id:t,tick:e,bindTo:n,params:r,prefix:"s#"}),i&&this.config(r)}tick(){var t=this.bindTo?this.tickFn.bind(this.bindTo):this.tickFn;return this.value=t(this.params||null),this.value}}class Brain{constructor({id:t,genome:e,sensors:n=[],actions:i=[],neuronsCount:r=0,graphOptions:o={},verticesParams:a={}}){Object.assign(this,ResourcefulMixin),this.id=t||this.createId("b#",4),this.ticks=[],this.genome=e,this.sensors=n,this.actions=i,this.neuronsCount=r,this.graphOptions=o,this.verticesParams=a,this.setup()}setup(){const e={brain:this,...this.verticesParams},n=(this.sensors=this.sensors.map(t=>({...t,params:e})).map(t=>new Sensor(t)),this.actions=this.actions.map(t=>({...t,params:e})).map(t=>new Action(t)),this.neurons=new Array(this.neuronsCount).fill(0).map((t,e)=>new Neuron({id:"n#"+toBase32(e).padStart(2,"0")})),[...new Set([].concat(this.sensors||[]).concat(this.neurons||[]).concat(this.actions||[]).map(t=>t.id))]);this.graph=new graphology_umd_minExports({multi:!0,allowSelfLoops:!1,...this.graphOptions}),this.graph.import({attributes:{name:this.id},nodes:n.map(t=>({key:t}))});for(const t of this.genome.bases.filter(t=>n.includes(t.from)&&n.includes(t.to)))t.from===t.to||this.graph.hasEdge(t.from,t.to)||this.graph.addEdgeWithKey(t.from+">>"+t.to,t.from,t.to,{weight:t.weight})}static random({genome:t,genomeSize:e=1,neuronsCount:n=0,sensors:i=[],actions:r=[]}={}){t=t||Genome.random(e);return new Brain({sensors:i,actions:r,genome:t,neuronsCount:n})}toJSON(){return{genome:this.genome.toArray(),brainOrder:this.graph.order,brainConnections:this.graph.size,...this.graph.export(),ticks:this.ticks}}getObject(e){return e.startsWith("s#")?this.sensors.find(t=>t.id===e):e.startsWith("a#")?this.actions.find(t=>t.id===e):e.startsWith("#n")?this.neurons.find(t=>t.id===e):null}getObjects(t=[]){return t.map(t=>this.getObject(t)).filter(t=>t)}tick(){const n=[...new Set([].concat(this.sensors||[]).concat(this.neurons||[]).concat(this.actions||[]).map(t=>t.id))].reduce((t,e)=>(t[e]=0,t),{});this.sensors.forEach(t=>{n[t.id]=t.tick()});let t=this.sensors.map(t=>this.graph.neighbors(t.id)).flatMap(t=>t).filter(t=>t.startsWith("n#")).map(e=>this.neurons.find(t=>t.id===e));for(;0<t.length;){let e=t.shift();var i,r=this.graph.edges(e.id).map(t=>({name:t,extremities:this.graph.extremities(t)})),o=r.filter(t=>t.extremities[1]===e.id).filter(t=>t.extremities[0]!==e.id);0<o.filter(t=>!n.hasOwnProperty(t.extremities[0])).length?t=t.concat(o.map(e=>this.neurons.find(t=>e===t.extremities[0]))).concat(e):(i=(o=o.map(t=>({...t,...this.graph.getEdgeAttributes(t.name)}))).map(t=>t.weight).reduce((t,e)=>t+e,0),o=o.map(t=>({...t,value:n[t.extremities[0]]*t.weight})),o=(n[e.id]=Math.tanh(o.reduce((t,e)=>t+e.value,0)/i),r.filter(t=>t.extremities[0]===e.id).filter(t=>t.extremities[1].startsWith("n#")).map(e=>this.neurons.find(t=>t.id===e.extremities[1])).filter(t=>!n.hasOwnProperty(t.id))),t=t.concat(o))}for(const s of this.actions){var e=this.graph.edges(s.id).filter(t=>t).map(t=>({name:t,id:this.graph.extremities(t)[0]})).map(t=>({...t,...this.graph.getEdgeAttributes(t.name)})),a=e.map(t=>t.weight).reduce((t,e)=>t+e,0)||1;n[s.id]=Math.tanh(e.reduce((t,e)=>t+n[e.id]*e.weight,0)/a)}return this.ticks.push(n),Object.entries(n).filter(([t])=>t.startsWith("a#")).reduce((t,[e,n])=>(t[e]=n,t),{})}run(){var t=this.tick();for(const e of this.actions)e.tick(t[e.id])}}class Individual{constructor({genome:t=null,genomeSize:e=1,brain:{sensors:n=[],actions:i=[],neuronsCount:r=0,graphOptions:o={},verticesParams:a={}}}){Object.assign(this,ResourcefulMixin),this.id=this.createId("i#",4),this.health=1;var s=[...new Set([].concat(n).concat(i).map(t=>t.id))].sort();this.genome=t||Genome.randomWithinIds({ids:s,neuronsCount:r,size:e}),this.brain=new Brain({genome:this.genome,neuronsCount:r,graphOptions:o,sensors:n.map(t=>({bindTo:this,...t})),actions:i.map(t=>({bindTo:this,...t})),verticesParams:{...a,individual:this}})}tick(){return this.brain.tick()}toJSON(){var t=this.brain.toJSON();return{id:this.id,health:this.health,genome:this.genome.toString(),brain:{order:t.brainOrder||0,connections:t.brainConnections||0,nodes:this.genome.nodes.join(" "),edges:[].concat(t.edges).map(t=>t.key).join(" "),ticks:t.ticks}}}toString(){return JSON.stringify(this.toJSON(),null,2)}}class Generation{constructor({size:t,individualOptions:e={},individualInterface:n=Individual,fitnessFunction:i=function(t){t.health},matingStrategy:r=[Pool]}){this.iteration=0,this.size=t,this.individualInterface=n,this.individualOptions=e,this.fitnessFunction=i,this.matingStrategies=r,this.individuals=[],this.demographics={total:0,random:0}}static first({size:t,individualOptions:e={},individualInterface:n=Individual,fitnessFunction:i}){t=new Generation({size:t,individualInterface:n,individualOptions:e,fitnessFunction:i});return t.fill(),t.demographics.total=t.individuals.length,t.demographics.random=t.individuals.length,t}static from(t,e={},n={}){Object.assign(n,t.options);const{justAlive:i=!0,topPerformers:r=.15,childrenPerIndividual:o=4}=e;e=new Generation(n),n=Math.floor(r*t.individuals.length);let a=t.individuals;t=(a=(a=i?a.filter(t=>0<t.health):a).slice(0,n)).flatMap(t=>t.children(o));return e.individuals=t,e.fill(),e.demographics={winners:a.length,children:t.length,random:e.individuals.length-t.length},e}createIndividualFromGenome(t){t=new this.individualInterface({genome:t,...this.individualOptions});return this.individuals.push(t),t}fill(){this.individuals||(this.individuals=[]);var t=Math.abs(this.size-this.individuals.length)%(this.size+1),t=new Array(t).fill(null).map(()=>new this.individualInterface({...this.individualOptions}));this.individuals=this.individuals.concat(t),this.fitness=new Array(this.individuals.length).fill(-1)}fit(){return this.fitness=this.individuals.map(this.fitnessFunction),this.fitness}next(){this.fit();let t;for(const i of this.matingStrategies){var e=new i(this);t=e.run()}t.iteration=this.iteration+1;var n=t.individuals.length;return t.fill(),t.demographics={children:n,total:t.individuals.length,random:t.individuals.length-n},t}toArray(){return this.individuals.map(t=>t.toString())}toJSON(){return this.individuals.map(t=>t.toJSON())}exportParams(){return{size:this.size,individualInterface:this.individualInterface,individualOptions:this.individualOptions,fitnessFunction:this.fitnessFunction,matingStrategy:this.matingStrategies}}}class Pool extends MatingStrategy{run(){var e={top:{checkIn:t=>.85<t,pool:[]},mid:{checkIn:t=>.6<t,pool:[]},low:{pool:[]}};for(let t=0;t<this.generation.individuals.length-1;t++){var n=this.generation.individuals[t],i=this.generation.fitness[t];(e.top.checkIn(i)?e.top:e.mid.checkIn(i)?e.mid:e.low).pool.push(n.genome)}let r=[];for(const o of chunkArray(e.top.pool,2)){let[t,e]=o;e=e||Genome.copy(t),r=r.concat(Genome.sexualReproduction(t,e)).concat(Genome.sexualReproduction(t,e))}for(const a of chunkArray(e.mid.pool,2)){let[t,e]=a;e=e||Genome.copy(t),r=r.concat(Genome.sexualReproduction(t,e))}var t=new Generation({...this.generation.exportParams()});for(const s of r)t.createIndividualFromGenome(s);return t}}exports.Action=Action,exports.Base=Base,exports.Brain=Brain,exports.Generation=Generation,exports.Genome=Genome,exports.Individual=Individual,exports.MatingStrategy=MatingStrategy,exports.Neuron=Neuron,exports.Pool=Pool,exports.ResourcefulMixin=ResourcefulMixin,exports.Sensor=Sensor,exports.SerializableMixin=SerializableMixin,exports.Vertex=Vertex,exports.alphanum=alphanum,exports.chars=chars,exports.chunk=chunk,exports.chunkArray=chunkArray,exports.consonants=consonants,exports.fromBase32=fromBase32,exports.fromBase32ToBin=fromBase32ToBin,exports.fromBin=fromBin,exports.fromBinToBase32=fromBinToBase32,exports.intersection=intersection,exports.randomAlpha=randomAlpha,exports.randomChar=randomChar,exports.randomInt=randomInt,exports.removeArray=removeArray,exports.shuffle=shuffle,exports.shuffleStr=shuffleStr,exports.toBase32=toBase32,exports.toBin=toBin,exports.vowels=vowels;
